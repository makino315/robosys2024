#!/usr/bin/python3
# SPDX-FileCopyrightText:
# SPDX-License-Identifier: BSD-3-Clause

import sys
from fractions import Fraction

def quadratic_max_min(a, b, c):
    if a == 0:
        raise ValueError("a cannot be zero for a quadratic equation")
    vertex_x = Fraction(-b, 2 * a)
    vertex_y = a * vertex_x**2 + b * vertex_x + c
    if a > 0:
        return ("最小値", vertex_y)
    else:
        return ("最大値", vertex_y)

for line in sys.stdin:
    user_input = line.strip()
    if not user_input:
        print("無効な入力: ")
        sys.exit(1)
    try:
        a, b, c = map(Fraction, user_input.split())
        result_type, result_value = quadratic_max_min(a, b, c)
        print(f"{result_type}: {result_value}")
    except ValueError as e:
        print(f"無効な入力: {user_input}")
        sys.exit(1)
    except ZeroDivisionError:
        print(f"無効な入力: {user_input}")
        sys.exit(1)

