#!/bin/bash -xv
# SPDX-FileCopyrightText:
# SPDX-License-Identifier: BSD-3-Clause

ng () {
       echo ${1}行目が違うよ
       res=1
}

res=0

# テストケース1: 正常な関数と積分区間
out=$(echo -e "x**2\n0,1" | ./integral.py)
[ "${out}" = "f(x) = x**2 の区間 [0.0, 1.0] における定積分の結果: 1/3" ] || ng "$LINENO"

# テストケース2: 負の積分区間
out=$(echo -e "x**2\n-1,0" | ./integral.py)
[ "${out}" = "f(x) = x**2 の区間 [-1.0, 0.0] における定積分の結果: 1/3" ] || ng "$LINENO"

# テストケース3: 無効な関数入力
out=$(echo -e "x**\n0,1" | ./integral.py)
[ "$?" = 1 ] || ng "$LINENO"
[ "${out}" = "エラー: Sympify of expression 'could not parse 'x**' failed, because of exception being raised: SyntaxError: invalid syntax (<string>, line 1)" ] || ng "$LINENO"

# テストケース4: 無効な積分区間
out=$(echo -e "x**2\n0,a" | ./integral.py)
[ "$?" = 1 ] || ng "$LINENO"
[ "${out}" = "エラー: could not convert string to float: 'a'" ] || ng "$LINENO"

# テストケース5: 空の入力
out=$(echo -e "\n" | ./integral.py)
[ "$?" = 1 ] || ng "$LINENO"
[ "${out}" = "エラー: list index out of range" ] || ng "$LINENO"

[ "${res}" = 0 ] && echo OK
exit $res

